{"version":3,"sources":["UI/Logo.tsx","UI/Card.tsx","UI/Button.tsx","assets/login-cover.png","firebase.ts","pages/Login.tsx","UI/Link.tsx","store/auth-slice.ts","store/hooks.ts","UI/Dropdown.tsx","UI/DropdownWithLabel.tsx","UI/Overlay.tsx","UI/Modal.tsx","components/Projects/ProjectForm.tsx","components/Projects/Project.tsx","components/Projects/ProjectsList.tsx","components/Sidebar/Sidebar.tsx","components/Header/Profile.tsx","components/Header/Header.tsx","store/app-slice.ts","components/Cards/Card.tsx","UI/Input.tsx","components/Sections/Section.tsx","components/Sections/NewSection.tsx","components/Sections/SectionsList.tsx","containers/Main.tsx","containers/Layout.tsx","pages/LoadingPage.tsx","components/Cards/CardDetails.tsx","pages/Home.tsx","containers/App.tsx","store/index.ts","index.tsx"],"names":["Container","styled","h1","Logo","div","props","isModal","width","button","fullWidth","variant","Button","IconLabel","onClick","className","type","children","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","GoogleProvider","GoogleAuthProvider","db","firestore","Cover","State","state","stateUpdateDuration","getRandomColor","colors","Math","round","random","length","Login","useState","isLoading","setIsLoading","hasError","setHasError","stateMessage","login","a","signInWithPopup","result","userId","user","uid","additionalUserInfo","isNewUser","email","name","displayName","thumbnail","photoURL","defaultProject","ownerUid","sectionsOrder","sections","s1","id","cards","s2","s3","s4","c1","title","description","checklist","isChecked","content","c2","c3","c4","project_1Id","collection","doc","set","userInfo","projects","color","isDefault","inFavorite","Card","SwitchTransition","CSSTransition","timeout","classNames","alt","src","LoginCover","GoogleIcon","authSlice","createSlice","initialState","reducers","action","payload","signOut","dragProject","splice","sourceIndex","draggedEl","destinationIndex","toggleFavorite","project","find","editProject","deleteProject","projectIndex","findIndex","addProject","push","authReducer","reducer","authActions","actions","useAppDispatch","useDispatch","useAppSelector","useSelector","ul","responsive","Dropdown","items","map","index","Icon","isOpened","DropdownWithLabel","listItems","setIsOpened","nodeRef","useRef","e","stopPropagation","prev","in","unmountOnExit","mountOnEnter","ClickAwayListener","onClickAway","ref","zIndex","Overlay","showIn","height","Modal","ReactDOM","createPortal","document","getElementById","theme","createMuiTheme","palette","primary","main","Header","header","Main","form","ProjectForm","onClose","dispatch","setName","setColor","formIsValid","useEffect","ThemeProvider","IconButton","size","onSubmit","preventDefault","TextField","label","value","onChange","target","FormControl","InputLabel","Select","labelId","MenuItem","toLowerCase","MainBody","isSelected","isDragging","Drag","Project","React","forwardRef","draggableProps","dragHandleProps","openSidebar","closeSidebar","history","useHistory","isEditing","setIsEditing","HeartFill","Heart","PencilSquare","Trash","ProjectsList","sidebarProps","selectedProject","app","merge","onDragEnd","destination","source","droppableId","provided","droppableProps","innerRef","draggableId","snapshot","placeholder","Sidebar","close","open","isAdding","setIsAdding","PlusLg","Link","href","Profile","Avatar","PersonCircle","alert","JSON","stringify","BoxArrowRight","appSlice","projectData","selectProject","setProjectData","setSectionName","addSection","deleteSection","sectionIndex","section","forEach","cardId","dragSection","addCard","sectionId","changeURL","dragCard","deleteCard","indexOf","setCardTitle","setCardDescription","toggleCheckbox","checkbox","checkboxId","setCheckboxValue","deleteCheckbox","addCheckbox","v4","appReducer","appActions","hasDescription","checklistInfo","style","cursor","total","checked","Input","input","Section","marginLeft","marginRight","direction","card","trim","filter","check","NewSection","SectionsList","sidebarIsOpened","Layout","setSidebarIsOpened","LoadingPage","noQuote","quote","setQuote","author","setAuthor","fetch","then","response","json","data","catch","err","Checklist","NewCheckbox","MarkdownContainer","CardDetails","useParams","setId","setTimeout","selectedTab","setSelectedTab","position","top","right","onTabChange","generateMarkdownPreview","markdown","Promise","resolve","Markdown","Checkbox","Home","fetchProjectData","get","some","path","match","App","getUserData","onAuthStateChanged","to","store","configureStore","render","StrictMode"],"mappings":"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","file":"static/js/main.28999803.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { ListCheck } from 'react-bootstrap-icons';\r\n\r\nconst Container = styled.h1`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  color: var(--color-primary);\r\n`;\r\n\r\nexport default function Logo() {\r\n  return (\r\n    <Container>\r\n      <ListCheck />\r\n      Plaject\r\n    </Container>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport default styled.div<{ width: number; isModal?: boolean }>`\r\n  margin: ${props => (props.isModal ? '0' : '2rem auto 0 auto')};\r\n  max-width: ${props => props.width}px;\r\n  width: 100%;\r\n  border: var(--border-thick);\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 5px var(--color-grey-light);\r\n  overflow: hidden;\r\n\r\n  @media (max-width: ${props => props.width + 32}px) {\r\n    & {\r\n      ${props =>\r\n        props.isModal\r\n          ? `\r\n      width: calc(100% - 2rem);\r\n      `\r\n          : `\r\n      height: 100%;\r\n      margin: 0;\r\n      border-radius: 0;\r\n      border: none;\r\n      box-shadow: none;\r\n      `}\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Icon } from 'react-bootstrap-icons';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.button<{\r\n  variant: 'outlined' | 'contained';\r\n  fullWidth?: boolean;\r\n}>`\r\n  // removing the default browser appearance\r\n  outline: none;\r\n  border: none;\r\n  background-color: transparent;\r\n  font-size: inherit;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  ${props => (props.fullWidth ? 'justify-content: center;' : '')}\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  padding: 0.5rem 1rem;\r\n  ${props => props.fullWidth && 'width: 100%;'}\r\n  border-radius: 5px;\r\n  transition: background-color 300ms, transform 150ms;\r\n  ${props =>\r\n    props.variant === 'outlined'\r\n      ? `\r\n    color: var(--color-primary);\r\n    border: 1px solid var(--color-primary);\r\n\r\n    &:hover {\r\n      background-color: var(--color-primary-transparent-2)\r\n    }\r\n\r\n    &:active {\r\n      background-color: var(--color-primary-transparent-3)\r\n    }\r\n  `\r\n      : `\r\n    background-color: var(--color-primary);\r\n    color: var(--color-white);\r\n    border: 1px solid var(--color-primary);\r\n\r\n    &:hover {\r\n      background-color: var(--color-primary-light);\r\n      border: 1px solid var(--color-primary-light);\r\n    }\r\n    &:active {\r\n      transform: scale(0.98);\r\n    }\r\n\r\n  `}\r\n\r\n  svg {\r\n    margin-right: 1rem;\r\n  }\r\n`;\r\n\r\nconst Button: React.FC<{\r\n  variant: 'outlined' | 'contained';\r\n  onClick?: () => void;\r\n  IconLabel?: Icon;\r\n  fullWidth?: boolean;\r\n  className?: string;\r\n  type?: 'button' | 'submit' | 'reset';\r\n}> = ({\r\n  variant,\r\n  IconLabel,\r\n  onClick,\r\n  fullWidth,\r\n  className,\r\n  type,\r\n  children,\r\n}) => {\r\n  return (\r\n    <Container\r\n      variant={variant}\r\n      onClick={onClick}\r\n      fullWidth={fullWidth}\r\n      className={className}\r\n      type={type}\r\n    >\r\n      {IconLabel && <IconLabel />}\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export default __webpack_public_path__ + \"static/media/login-cover.5551a152.png\";","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyAU42JDuiKZ0FumSc1gaPBbgF8imSuyxKg',\r\n  authDomain: 'plaject.firebaseapp.com',\r\n  projectId: 'plaject',\r\n  storageBucket: 'plaject.appspot.com',\r\n  messagingSenderId: '738988967156',\r\n  appId: '1:738988967156:web:0e9ee57c89ace98f874aa1',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const GoogleProvider = new firebase.auth.GoogleAuthProvider();\r\nexport const db = firebase.firestore();\r\n","import React, { useState } from 'react';\r\nimport Logo from '../UI/Logo';\r\nimport Card from '../UI/Card';\r\nimport Button from '../UI/Button';\r\nimport styled from 'styled-components';\r\nimport LoginCover from '../assets/login-cover.png';\r\nimport { CSSTransition, SwitchTransition } from 'react-transition-group';\r\nimport { Google as GoogleIcon } from 'react-bootstrap-icons';\r\nimport { auth, db, GoogleProvider } from '../firebase';\r\nimport { Color, Project, UserInfo } from '../types';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  padding: 1rem;\r\n\r\n  & > *:not(:last-child) {\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  position: relative;\r\n\r\n  img {\r\n    width: 100%;\r\n  }\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: var(--color-primary-transparent-3);\r\n    z-index: -1;\r\n    border-top-right-radius: 60%;\r\n    border-top-left-radius: 70%;\r\n    border-bottom-right-radius: 60%;\r\n    border-bottom-left-radius: 60%;\r\n  }\r\n`;\r\n\r\nconst stateUpdateDuration = 600;\r\n\r\nconst State = styled.div<{ state: 'error' | 'loading' | 'intial' }>`\r\n  font-size: 1rem;\r\n  width: 100%;\r\n  text-align: center;\r\n  padding: 0.2rem 0;\r\n  background-color: ${props =>\r\n    props.state === 'intial'\r\n      ? 'var(--color-primary)'\r\n      : props.state === 'loading'\r\n      ? 'var(--color-blue)'\r\n      : 'var(--color-red)'};\r\n  color: var(--color-white);\r\n  margin-bottom: var(--gap);\r\n  transition: all ${stateUpdateDuration}ms;\r\n\r\n  & p.fade-enter {\r\n    opacity: 0;\r\n    transform: translateX(-10rem);\r\n  }\r\n  & p.fade-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  & p.fade-enter-active {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n  & p.fade-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(10rem);\r\n  }\r\n  & p.fade-enter-active,\r\n  & p.fade-exit-active {\r\n    transition: all ${stateUpdateDuration / 2}ms;\r\n  }\r\n`;\r\n\r\nconst getRandomColor = (): Color => {\r\n  const colors = ['red', 'orange', 'yellow', 'green', 'blue', 'pink', 'purple'];\r\n  return colors[Math.round(Math.random() * colors.length)] as Color;\r\n};\r\n\r\nexport default function Login() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [hasError, setHasError] = useState(false);\r\n\r\n  const state =\r\n    !isLoading && !hasError ? 'intial' : isLoading ? 'loading' : 'error';\r\n\r\n  const stateMessage =\r\n    state === 'intial'\r\n      ? 'Please, start authenticating with your google account.'\r\n      : state === 'loading'\r\n      ? 'Loading...'\r\n      : 'Something went wrong.';\r\n\r\n  const login = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const result = await auth.signInWithPopup(GoogleProvider);\r\n      const userId = result.user!.uid;\r\n      const isNewUser = result.additionalUserInfo!.isNewUser;\r\n\r\n      // check if the user is new or not and add the entry in the db depending on that\r\n      if (isNewUser) {\r\n        const email = result.user!.email as string;\r\n        const name = result.user!.displayName as string;\r\n        const thumbnail = result.user!.photoURL as string;\r\n\r\n        // adding the default project for that user\r\n        const defaultProject: Project = {\r\n          ownerUid: userId,\r\n          sectionsOrder: ['s1', 's2', 's3', 's4'],\r\n          sections: {\r\n            s1: { id: 's1', name: 'TODO', cards: ['c1', 'c2', 'c3'] },\r\n            s2: { id: 's2', name: 'DOING', cards: ['c4'] },\r\n            s3: { id: 's3', name: 'DONE', cards: [] },\r\n            s4: { id: 's4', name: 'BUG / NOT SURE', cards: [] },\r\n          },\r\n          cards: {\r\n            c1: {\r\n              id: 'c1',\r\n              title: 'Planning the app',\r\n              description:\r\n                'Consists of four steps:\\n1. Define the app by asking some questions\\n2. Determe the MVC of the app (The most important features)\\n3. Determine other \"nice to haves\"\\n4. Create a component tree for the app\\n5. Plan the state',\r\n              checklist: [\r\n                {\r\n                  id: 'cl1',\r\n                  isChecked: false,\r\n                  content:\r\n                    'Finish what has been mentioned in the description of this card?',\r\n                },\r\n              ],\r\n            },\r\n            c2: {\r\n              id: 'c2',\r\n              title: 'Design the app',\r\n              description: \"It's clear stop procrastination\",\r\n              checklist: [{ id: 'cl1', isChecked: false, content: '...' }],\r\n            },\r\n            c3: {\r\n              id: 'c3',\r\n              title: 'Design the api of the app',\r\n              description: \"It's clear stop procrastination\",\r\n              checklist: [\r\n                { id: 'cl1', isChecked: false, content: 'Learn firebase' },\r\n              ],\r\n            },\r\n            c4: {\r\n              id: 'c4',\r\n              title: 'Finish that project',\r\n              description: '',\r\n              checklist: [],\r\n            },\r\n          },\r\n        };\r\n        const project_1Id = db.collection('projects').doc().id;\r\n        db.collection('projects').doc(project_1Id).set(defaultProject);\r\n\r\n        // adding the user entry\r\n\r\n        const userInfo: UserInfo = {\r\n          email,\r\n          name,\r\n          thumbnail,\r\n          projects: [\r\n            {\r\n              id: project_1Id,\r\n              name: 'Default Project',\r\n              color: getRandomColor(),\r\n              isDefault: true,\r\n              inFavorite: false,\r\n            },\r\n          ],\r\n        };\r\n        db.collection('users').doc(userId).set(userInfo);\r\n        setIsLoading(false);\r\n      }\r\n    } catch (err) {\r\n      setHasError(true);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card width={600}>\r\n      <State state={state}>\r\n        <SwitchTransition>\r\n          <CSSTransition\r\n            timeout={stateUpdateDuration / 2}\r\n            classNames=\"fade\"\r\n            key={stateMessage}\r\n          >\r\n            <p>{stateMessage}</p>\r\n          </CSSTransition>\r\n        </SwitchTransition>\r\n      </State>\r\n      <Container>\r\n        <Logo />\r\n        <p>\r\n          Please enter your google account here to be able to save your\r\n          projects.\r\n        </p>\r\n        <Cover>\r\n          <img alt=\"Login cover\" src={LoginCover} />\r\n        </Cover>\r\n        <Button variant=\"outlined\" IconLabel={GoogleIcon} onClick={login}>\r\n          Login with google\r\n        </Button>\r\n      </Container>\r\n    </Card>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport default styled.a`\r\n  text-decoration: none;\r\n  color: inherit;\r\n\r\n  display: inline-block;\r\n  background-color: #fff;\r\n  padding: 0.25rem;\r\n  transition: transform 300ms;\r\n\r\n  &:hover {\r\n    transform: rotateZ(15deg) scale(1.05);\r\n    box-shadow: 0 5px 5px #00000030;\r\n  }\r\n\r\n  &:active {\r\n    transform: rotateZ(15deg) scale(0.95);\r\n    box-shadow: 0 2px 2px #00000030;\r\n  }\r\n`;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { UserInfo } from '../types';\r\n\r\nconst initialState: {\r\n  userId: null | string;\r\n  userInfo: UserInfo | null;\r\n} = { userId: null, userInfo: null };\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.userId = action.payload.userId;\r\n      state.userInfo = action.payload.userInfo;\r\n    },\r\n    signOut(state) {\r\n      state.userId = null;\r\n      state.userInfo = null;\r\n    },\r\n    dragProject(state, action) {\r\n      const projects = state.userInfo!.projects;\r\n\r\n      const [draggedEl] = projects.splice(action.payload.sourceIndex, 1);\r\n\r\n      projects.splice(action.payload.destinationIndex, 0, draggedEl);\r\n    },\r\n    toggleFavorite(state, action) {\r\n      const project = state.userInfo!.projects.find(\r\n        project => project.id === action.payload,\r\n      );\r\n      project!.inFavorite = !project!.inFavorite;\r\n    },\r\n    editProject(state, action) {\r\n      const project = state.userInfo!.projects.find(\r\n        project => project.id === action.payload.id,\r\n      );\r\n\r\n      project!.name = action.payload.name;\r\n      project!.color = action.payload.color;\r\n    },\r\n    deleteProject(state, action) {\r\n      const projectIndex = state.userInfo!.projects.findIndex(\r\n        project => project.id === action.payload,\r\n      );\r\n      state.userInfo!.projects.splice(projectIndex, 1);\r\n    },\r\n    addProject(state, action) {\r\n      state.userInfo!.projects.push(action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const authReducer = authSlice.reducer;\r\nexport const authActions = authSlice.actions;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './index';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// icons\r\nimport { Icon } from 'react-bootstrap-icons';\r\n\r\nconst Container = styled.ul<{ responsive?: boolean }>`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #fff;\r\n  color: var(--color-black);\r\n  width: 12rem;\r\n  padding: 0.5rem 0;\r\n  margin: 1rem auto;\r\n  list-style: none;\r\n  border-radius: 5px;\r\n  border: var(--border-thin);\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -0.75rem;\r\n    left: calc(50% - 0.75rem);\r\n\r\n    width: 1.5rem;\r\n    height: 1.5rem;\r\n    background-color: #fff;\r\n    transform: rotate(45deg);\r\n    z-index: 50;\r\n    border-top: var(--border-thin);\r\n    border-left: var(--border-thin);\r\n  }\r\n\r\n  & li {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0.5rem 1rem;\r\n    gap: 1rem;\r\n    z-index: 100;\r\n    cursor: pointer;\r\n    transition: background-color 300ms;\r\n\r\n    svg {\r\n      font-size: 1.2rem;\r\n    }\r\n\r\n    &:hover {\r\n      background-color: var(--color-grey-light);\r\n    }\r\n  }\r\n\r\n  ${props =>\r\n    props.responsive &&\r\n    `\r\n    @media (max-width: 600px) {\r\n      width: max-content;\r\n\r\n      & li .content {\r\n        display: none;\r\n      }\r\n    }\r\n  `}\r\n`;\r\n\r\ninterface ListItem {\r\n  Icon: Icon;\r\n  content: string;\r\n  onClick: () => void;\r\n}\r\n\r\nconst Dropdown: React.FC<{ items: ListItem[]; responsive?: boolean }> = ({\r\n  items,\r\n  responsive,\r\n}) => {\r\n  return (\r\n    <Container responsive={responsive}>\r\n      {items.map(({ Icon, content, onClick }, index) => (\r\n        <li key={index} onClick={onClick}>\r\n          <Icon className=\"icon\" />\r\n          <span className=\"content\">{content}</span>\r\n        </li>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import { ClickAwayListener } from '@material-ui/core';\r\nimport React, { useRef, useState } from 'react';\r\nimport { Icon } from 'react-bootstrap-icons';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styled from 'styled-components';\r\nimport Dropdown from './Dropdown';\r\n\r\nconst Container = styled.div<{ responsive?: boolean; isOpened: boolean }>`\r\n  position: relative;\r\n  z-index: ${props => (props.isOpened ? '20' : '10')};\r\n\r\n  & .dropdown-container {\r\n    position: absolute;\r\n    top: 100%;\r\n    left: 50%;\r\n    transform: translate(-50%, 0);\r\n    z-index: 10;\r\n    opacity: 1;\r\n\r\n    &.fade-enter {\r\n      opacity: 0;\r\n    }\r\n    &.fade-enter-active {\r\n      opacity: 1;\r\n      transition: opacity 200ms;\r\n    }\r\n    &.fade-exit {\r\n      opacity: 1;\r\n    }\r\n    &.fade-exit-active {\r\n      opacity: 0;\r\n      transition: opacity 200ms;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ListItem {\r\n  Icon: Icon;\r\n  content: string;\r\n  onClick: () => void;\r\n}\r\n\r\nconst DropdownWithLabel: React.FC<{\r\n  listItems: ListItem[];\r\n  responsive?: boolean;\r\n  className?: string;\r\n}> = ({ children, listItems, responsive, className }) => {\r\n  const [isOpened, setIsOpened] = useState(false);\r\n  const nodeRef = useRef(null);\r\n\r\n  return (\r\n    <Container\r\n      responsive={responsive}\r\n      isOpened={isOpened}\r\n      onClick={e => {\r\n        e.stopPropagation();\r\n        setIsOpened(prev => !prev);\r\n      }}\r\n      className={className}\r\n    >\r\n      {children}\r\n      <CSSTransition\r\n        timeout={300}\r\n        in={isOpened}\r\n        classNames=\"fade\"\r\n        unmountOnExit\r\n        mountOnEnter\r\n        nodeRef={nodeRef}\r\n      >\r\n        <ClickAwayListener onClickAway={() => setIsOpened(false)}>\r\n          <div className=\"dropdown-container\" ref={nodeRef}>\r\n            <Dropdown items={listItems} responsive={responsive} />\r\n          </div>\r\n        </ClickAwayListener>\r\n      </CSSTransition>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DropdownWithLabel;\r\n","import React, { useRef } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div<{ zIndex: number; responsive: boolean }>`\r\n  display: none;\r\n\r\n  ${props => props.responsive && '@media (max-width: 900px) {'}\r\n  display: block;\r\n  position: fixed;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  z-index: ${props => props.zIndex};\r\n  background-color: #00000050;\r\n\r\n  &.fade-enter {\r\n    opacity: 0;\r\n  }\r\n\r\n  &.fade-enter-active {\r\n    opacity: 1;\r\n  }\r\n\r\n  &.fade-exit {\r\n    opacity: 1;\r\n  }\r\n\r\n  &.fade-exit-active {\r\n    opacity: 0;\r\n  }\r\n\r\n  &.fade-enter-active,\r\n  &.fade-exit-active {\r\n    transition: opacity 300ms;\r\n  }\r\n  ${props => props.responsive && '}'}\r\n`;\r\n\r\nconst Overlay: React.FC<{\r\n  showIn: boolean;\r\n  onClick: () => void;\r\n  zIndex: number;\r\n  responsive: boolean;\r\n}> = ({ showIn, onClick, zIndex, responsive }) => {\r\n  const nodeRef = useRef(null);\r\n\r\n  return (\r\n    <CSSTransition\r\n      in={showIn}\r\n      classNames=\"fade\"\r\n      timeout={300}\r\n      unmountOnExit\r\n      mountOnEnter\r\n      nodeRef={nodeRef}\r\n    >\r\n      <Container\r\n        ref={nodeRef}\r\n        zIndex={zIndex}\r\n        onClick={onClick}\r\n        responsive={responsive}\r\n      />\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n","import ReactDOM from 'react-dom';\r\nimport React, { useRef } from 'react';\r\nimport Card from './Card';\r\nimport styled from 'styled-components';\r\nimport Overlay from './Overlay';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nconst Container = styled(Card)<{ height?: number }>`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  height: ${props => (props.height ? `${props.height}px` : 'max-content')};\r\n  z-index: 10;\r\n  background-color: var(--color-white);\r\n  box-shadow: none;\r\n  transition: all 300ms;\r\n\r\n  &.animation-enter {\r\n    transform: translate(-50%, -50%) scale(0.5);\r\n    opacity: 0;\r\n  }\r\n\r\n  &.animation-enter-active {\r\n    transform: translate(-50%, -50%) scale(1);\r\n    opacity: 1;\r\n  }\r\n\r\n  &.animation-exit {\r\n    transform: translate(-50%, -50%) scale(1);\r\n    opacity: 1;\r\n  }\r\n\r\n  &.animation-exit-active {\r\n    transform: translate(-50%, -50%) scale(0.5);\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nconst Modal: React.FC<{\r\n  showIn: boolean;\r\n  onClickAway: () => void;\r\n  width: number;\r\n  height?: number;\r\n}> = ({ width, showIn, onClickAway, height, children }) => {\r\n  const nodeRef = useRef(null);\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <Overlay\r\n        zIndex={0}\r\n        onClick={onClickAway}\r\n        showIn={showIn}\r\n        responsive={false}\r\n      />\r\n\r\n      <CSSTransition\r\n        classNames=\"animation\"\r\n        in={showIn}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={300}\r\n        nodeRef={nodeRef}\r\n      >\r\n        <Container ref={nodeRef} height={height} width={width} isModal={true}>\r\n          {children}\r\n        </Container>\r\n      </CSSTransition>\r\n    </>,\r\n    document.getElementById('modal-root')!,\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Modal from '../../UI/Modal';\r\nimport styled from 'styled-components';\r\nimport {\r\n  IconButton,\r\n  TextField,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n} from '@material-ui/core';\r\n\r\nimport { X } from 'react-bootstrap-icons';\r\nimport { useState } from 'react';\r\nimport Button from '../../UI/Button';\r\nimport { Color, Project } from '../../types';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { authActions } from '../../store/auth-slice';\r\nimport { useEffect } from 'react';\r\nimport { db } from '../../firebase';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#2bae66',\r\n    },\r\n  },\r\n});\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border-bottom: var(--border-thin);\r\n  & .close-btn {\r\n  }\r\n\r\n  & h3 {\r\n    width: max-content;\r\n    margin-left: 1rem;\r\n  }\r\n`;\r\n\r\nconst Main = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 1rem;\r\n  gap: 1rem;\r\n\r\n  .btn-group {\r\n    display: flex;\r\n    gap: 1rem;\r\n\r\n    & button {\r\n      flex: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst colors = ['Red', 'Orange', 'Yellow', 'Green', 'Blue', 'Purple', 'Pink'];\r\n\r\nconst ProjectForm: React.FC<{\r\n  showIn: boolean;\r\n  onClose: () => void;\r\n  type: 'add' | 'edit';\r\n  projectId?: string;\r\n}> = ({ showIn, onClose, type, projectId }) => {\r\n  const projects = useAppSelector(state => state.auth.userInfo!.projects);\r\n  const userId = useAppSelector(state => state.auth.userId) as string;\r\n  const dispatch = useAppDispatch();\r\n  const [name, setName] = useState('');\r\n  const [color, setColor] = useState('');\r\n\r\n  const formIsValid = name.length > 6 && color.length > 0;\r\n\r\n  useEffect(() => {\r\n    if (type === 'edit' && projectId) {\r\n      const project = projects.find(project => project.id === projectId)!;\r\n      setName(project.name);\r\n      setColor(project.color);\r\n    }\r\n  }, []);\r\n\r\n  const submitHandler = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (formIsValid) {\r\n      if (type === 'edit' && projectId) {\r\n        dispatch(authActions.editProject({ id: projectId, name, color }));\r\n        onClose();\r\n      }\r\n      if (type === 'add') {\r\n        // adding the project the database\r\n        const project: Project = {\r\n          ownerUid: userId,\r\n          sectionsOrder: ['s1', 's2', 's3'],\r\n          sections: {\r\n            s1: { id: 's1', name: 'TODO', cards: [] },\r\n            s2: { id: 's2', name: 'DOING', cards: [] },\r\n            s3: { id: 's3', name: 'DONE', cards: [] },\r\n          },\r\n          cards: {},\r\n        };\r\n        const projectId = db.collection('projects').doc().id;\r\n        db.collection('projects').doc(projectId).set(project);\r\n        // adding the project to the auth slice (the ref of it)\r\n        dispatch(\r\n          authActions.addProject({\r\n            id: projectId,\r\n            name,\r\n            color,\r\n            inFavorite: false,\r\n          }),\r\n        );\r\n        onClose();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Modal width={400} onClickAway={onClose} showIn={showIn}>\r\n        <Header>\r\n          <h3>\r\n            {type === 'add' ? 'ADD A NEW PROJECT' : 'EDIT AN EXISTED PROJECT'}\r\n          </h3>\r\n          <IconButton onClick={onClose} className=\"close-btn\">\r\n            <X size={32} />\r\n          </IconButton>\r\n        </Header>\r\n        <Main onSubmit={submitHandler}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            label=\"Project Name\"\r\n            value={name}\r\n            onChange={e => {\r\n              const value = e.target.value;\r\n              if (value.length < 24) {\r\n                setName(e.target.value);\r\n              }\r\n            }}\r\n          />\r\n          <FormControl size=\"small\" variant=\"outlined\">\r\n            <InputLabel id=\"select-label\">Project Color</InputLabel>\r\n            <Select\r\n              labelId=\"select-label\"\r\n              id=\"select\"\r\n              label=\"Project Color\"\r\n              value={color}\r\n              onChange={e => setColor(e.target.value as Color)}\r\n            >\r\n              {colors.map((color, index) => (\r\n                <MenuItem\r\n                  key={index}\r\n                  value={color.toLowerCase()}\r\n                  className=\"option\"\r\n                >\r\n                  <span className={`color color-${color.toLowerCase()}`}></span>\r\n                  {color}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <div className=\"btn-group\">\r\n            <Button\r\n              variant=\"outlined\"\r\n              type=\"reset\"\r\n              fullWidth={true}\r\n              onClick={onClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button variant=\"contained\" type=\"submit\" fullWidth={true}>\r\n              Confirm\r\n            </Button>\r\n          </div>\r\n        </Main>\r\n      </Modal>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default ProjectForm;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport {\r\n  ThreeDotsVertical,\r\n  Heart,\r\n  PencilSquare,\r\n  Trash,\r\n  HeartFill,\r\n} from 'react-bootstrap-icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { authActions } from '../../store/auth-slice';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport DropdownWithLabel from '../../UI/DropdownWithLabel';\r\nimport ProjectForm from './ProjectForm';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  margin: 0.25rem 0;\r\n`;\r\n\r\nconst MainBody = styled.div<{\r\n  isSelected: boolean;\r\n  color: string;\r\n  isDragging: boolean;\r\n  inFavorite: boolean;\r\n}>`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border: ${props => {\r\n    return props.isSelected ? 'var(--border-thick)' : 'var(--border-thin)';\r\n  }};\r\n\r\n  border-radius: 5px;\r\n  transition: all 300ms;\r\n  background-color: ${props => {\r\n    if (props.inFavorite) return 'var(--color-yellow-transparent-3);';\r\n    return 'var(--color-white)';\r\n  }};\r\n\r\n  ${props =>\r\n    props.isDragging &&\r\n    `\r\n    transform: rotateZ(5deg);\r\n    background-color: ${\r\n      props.inFavorite\r\n        ? 'var(--color-yellow-transparent-5)'\r\n        : 'var(--color-grey-light)'\r\n    };\r\n  `}\r\n\r\n  & .color {\r\n    ${props => `background-color: var(--color-${props.color});`}\r\n    width: 1.2rem;\r\n    height: 1.2rem;\r\n    border-radius: 50%;\r\n    margin: 0 1rem;\r\n  }\r\n\r\n  & .content {\r\n    flex: 1;\r\n    margin: 0 auto 0 0;\r\n  }\r\n\r\n  & svg {\r\n    font-size: 1.2rem;\r\n    fill: var(--color-black);\r\n  }\r\n\r\n  &:hover {\r\n    border: var(--border-thick);\r\n  }\r\n`;\r\n\r\nconst Drag = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 0.5rem);\r\n  grid-template-rows: repeat(3, 0.5rem);\r\n  row-gap: 0.1rem;\r\n  column-gap: 0.2rem;\r\n  padding: 0.5rem;\r\n  border-radius: 5px;\r\n  transition: background-color 300ms;\r\n\r\n  & div {\r\n    width: 0.5rem;\r\n    height: 0.5rem;\r\n    border-radius: 50%;\r\n    background-color: var(--color-grey-dark);\r\n  }\r\n\r\n  &:hover {\r\n    background-color: var(--color-grey-light);\r\n  }\r\n\r\n  &:active {\r\n    background-color: var(--color-grey);\r\n  }\r\n`;\r\n\r\ninterface ProjectProps {\r\n  id: string;\r\n  isSelected: boolean;\r\n  inFavorite: boolean;\r\n  color: 'red' | 'orange' | 'yellow' | 'green' | 'blue' | 'purple' | 'pink';\r\n  name: string;\r\n  isDefault?: boolean;\r\n  draggableProps: object;\r\n  dragHandleProps?: object;\r\n  isDragging: boolean;\r\n  openSidebar: () => void;\r\n  closeSidebar: () => void;\r\n}\r\n\r\nconst Project = React.forwardRef<any, ProjectProps>(\r\n  (\r\n    {\r\n      id,\r\n      isSelected,\r\n      inFavorite,\r\n      color,\r\n      name,\r\n      isDefault,\r\n      draggableProps,\r\n      dragHandleProps,\r\n      isDragging,\r\n      openSidebar,\r\n      closeSidebar,\r\n    },\r\n    ref,\r\n  ) => {\r\n    const history = useHistory();\r\n    const dispatch = useAppDispatch();\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const projects = useAppSelector(state => state.auth.userInfo!.projects);\r\n\r\n    const onSelect = (e: React.MouseEvent) => {\r\n      history.push(`/project/${id}`);\r\n    };\r\n\r\n    const toggleFavorite = () => {\r\n      dispatch(authActions.toggleFavorite(id));\r\n    };\r\n\r\n    const deleteProject = () => {\r\n      if (isSelected)\r\n        history.push(\r\n          `/project/${projects.find(project => project.isDefault)!.id}`,\r\n        );\r\n      dispatch(authActions.deleteProject(id));\r\n    };\r\n\r\n    const editProject = () => {\r\n      closeSidebar();\r\n      setIsEditing(true);\r\n    };\r\n\r\n    const listItems = [\r\n      {\r\n        Icon: inFavorite ? HeartFill : Heart,\r\n        content: `${inFavorite ? 'Unfavourite' : 'Favourite'}`,\r\n        onClick: toggleFavorite,\r\n      },\r\n      {\r\n        Icon: PencilSquare,\r\n        content: 'Edit project',\r\n        onClick: editProject,\r\n      },\r\n    ];\r\n\r\n    if (!isDefault) {\r\n      listItems.push({\r\n        Icon: Trash,\r\n        content: 'Delete project',\r\n        onClick: deleteProject,\r\n      });\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Container {...draggableProps} ref={ref}>\r\n          <Drag {...dragHandleProps}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </Drag>\r\n          <MainBody\r\n            isSelected={isSelected}\r\n            color={color}\r\n            isDragging={isDragging}\r\n            onClick={onSelect}\r\n            inFavorite={inFavorite}\r\n          >\r\n            <div className=\"color\"></div>\r\n            <div className=\"content\">{name}</div>\r\n            <DropdownWithLabel listItems={listItems} responsive={true}>\r\n              <IconButton>\r\n                <ThreeDotsVertical color=\"inherit\" />\r\n              </IconButton>\r\n            </DropdownWithLabel>\r\n          </MainBody>\r\n        </Container>\r\n        <ProjectForm\r\n          showIn={isEditing}\r\n          onClose={() => {\r\n            setIsEditing(false);\r\n            openSidebar();\r\n          }}\r\n          type=\"edit\"\r\n          projectId={id}\r\n        />\r\n      </>\r\n    );\r\n  },\r\n);\r\n\r\nexport default Project;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Project from './Project';\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { authActions } from '../../store/auth-slice';\r\nimport { db } from '../../firebase';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 1.5rem 0;\r\n  width: 100%;\r\n`;\r\n\r\nconst ProjectsList: React.FC<{\r\n  openSidebar: () => void;\r\n  closeSidebar: () => void;\r\n}> = ({ openSidebar, closeSidebar }) => {\r\n  const sidebarProps = { openSidebar, closeSidebar };\r\n  const userId = useAppSelector(state => state.auth.userId);\r\n  const projects = useAppSelector(state => state.auth.userInfo!.projects);\r\n  const selectedProject = useAppSelector(state => state.app.selectedProject);\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    // now you just need to dispatch actions to the project array and it'll be sent to the db automatically.\r\n    db.collection('users').doc(userId!).set(\r\n      {\r\n        projects,\r\n      },\r\n      { merge: true },\r\n    );\r\n  }, [projects]);\r\n\r\n  return (\r\n    <DragDropContext\r\n      onDragEnd={result => {\r\n        if (\r\n          !result.destination ||\r\n          result.destination!.index === result.source.index\r\n        )\r\n          return;\r\n\r\n        dispatch(\r\n          authActions.dragProject({\r\n            sourceIndex: result.source.index,\r\n            destinationIndex: result.destination.index,\r\n          }),\r\n        );\r\n      }}\r\n    >\r\n      <Droppable droppableId=\"project-list\">\r\n        {provided => (\r\n          <Container {...provided.droppableProps} ref={provided.innerRef}>\r\n            {projects.map((project, index) => (\r\n              <Draggable\r\n                key={project.id}\r\n                draggableId={project.id}\r\n                index={index}\r\n              >\r\n                {(provided, snapshot) => (\r\n                  <Project\r\n                    isSelected={project.id === selectedProject}\r\n                    {...project}\r\n                    ref={provided.innerRef}\r\n                    draggableProps={provided.draggableProps}\r\n                    dragHandleProps={provided.dragHandleProps}\r\n                    isDragging={snapshot.isDragging}\r\n                    {...sidebarProps}\r\n                  />\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </Container>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default ProjectsList;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { PlusLg, X as CloseIcon } from 'react-bootstrap-icons';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Logo from '../../UI/Logo';\r\nimport Link from '../../UI/Link';\r\nimport ProjectsList from '../Projects/ProjectsList';\r\nimport Button from '../../UI/Button';\r\nimport { useState } from 'react';\r\nimport ProjectForm from '../Projects/ProjectForm';\r\n\r\nconst Container = styled.div<{ isOpened: boolean }>`\r\n  position: relative;\r\n  width: 30%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 1rem 0.5rem;\r\n  border-right: var(--border-thick);\r\n  background-color: var(--color-white);\r\n  transition: all 300ms;\r\n  z-index: 1000;\r\n\r\n  & .close-btn {\r\n    display: none;\r\n  }\r\n\r\n  & .close-icon {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  & .copyright-text {\r\n    margin-top: auto;\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    ${props => !props.isOpened && 'left: -300px;'}\r\n    width: 300px;\r\n    ${props => (props.isOpened ? '' : 'overflow: hidden;')}\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    width: 100%;\r\n    left: ${props => (props.isOpened ? '0px' : '-100%')};\r\n\r\n    & .close-btn {\r\n      display: flex;\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Sidebar: React.FC<{\r\n  isOpened: boolean;\r\n  close: () => void;\r\n  open: () => void;\r\n}> = ({ isOpened, close, open }) => {\r\n  const [isAdding, setIsAdding] = useState(false);\r\n\r\n  return (\r\n    <Container isOpened={isOpened}>\r\n      <IconButton className=\"close-btn\" onClick={close}>\r\n        <CloseIcon size={32} />\r\n      </IconButton>\r\n      <Logo />\r\n      <ProjectsList openSidebar={open} closeSidebar={close} />\r\n      <Button\r\n        variant=\"outlined\"\r\n        IconLabel={PlusLg}\r\n        onClick={() => {\r\n          close();\r\n          setIsAdding(true);\r\n        }}\r\n        fullWidth={true}\r\n      >\r\n        Add a new Project\r\n      </Button>\r\n      <div className=\"copyright-text\">\r\n        Copyright &copy; 2021 -{' '}\r\n        <Link href=\"https://icons.getbootstrap.com/\" target=\"_blank\">\r\n          Yosef beder\r\n        </Link>\r\n      </div>\r\n\r\n      <ProjectForm\r\n        showIn={isAdding}\r\n        onClose={() => {\r\n          setIsAdding(false);\r\n          open();\r\n        }}\r\n        type=\"add\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport styled from 'styled-components';\r\nimport { useAppSelector } from '../../store/hooks';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0.5rem;\r\n  gap: 0.5rem;\r\n  cursor: pointer;\r\n  transition: background-color 300ms;\r\n  border-radius: 5px;\r\n  background-color: var(--color-primary-transparent-3);\r\n\r\n  & .user-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    color: var(--color-black);\r\n  }\r\n\r\n  & .username {\r\n  }\r\n\r\n  & .email {\r\n    font-size: 0.8rem;\r\n    font-weight: 300;\r\n  }\r\n\r\n  &:active {\r\n    background-color: var(--color-primary-transparent-5);\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    background-color: transparent;\r\n\r\n    &:active {\r\n      background-color: transparent;\r\n    }\r\n\r\n    & .user-info {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Profile() {\r\n  const userInfo = useAppSelector(state => state.auth.userInfo);\r\n\r\n  return (\r\n    <Container>\r\n      <Avatar variant=\"rounded\" src={userInfo!.thumbnail} />\r\n      <div className=\"user-info\">\r\n        <span className=\"username\">{userInfo!.name}</span>\r\n        <span className=\"email\">{userInfo!.email}</span>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n  BoxArrowRight,\r\n  List as MenuIcon,\r\n  PersonCircle,\r\n} from 'react-bootstrap-icons';\r\nimport { IconButton } from '@material-ui/core';\r\nimport Profile from './Profile';\r\nimport DropdownWithLabel from '../../UI/DropdownWithLabel';\r\nimport { useAppSelector } from '../../store/hooks';\r\n\r\nimport { auth } from '../../firebase';\r\n\r\nconst Container = styled.div`\r\n  height: 4rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 0.5rem;\r\n  color: var(--color-primary);\r\n  border-bottom: var(--border-thick);\r\n\r\n  & .btn-open {\r\n    display: none;\r\n  }\r\n\r\n  & .menu-icon {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    & .btn-open {\r\n      display: flex;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header: React.FC<{ openSidebar: () => void }> = ({ openSidebar }) => {\r\n  const selectedProject = useAppSelector(state => state.app.selectedProject);\r\n  const projects = useAppSelector(state => state.auth.userInfo!.projects);\r\n  const userInfo = useAppSelector(state => state.auth.userInfo);\r\n\r\n  const alertUserInfo = () => {\r\n    alert(JSON.stringify(userInfo, null, 2));\r\n  };\r\n\r\n  const signOut = () => {\r\n    auth.signOut();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton onClick={openSidebar} color=\"inherit\" className=\"btn-open\">\r\n        <MenuIcon className=\"menu-icon\" />\r\n      </IconButton>\r\n      <h2>{projects.find(project => project.id === selectedProject)?.name}</h2>\r\n      <DropdownWithLabel\r\n        listItems={[\r\n          {\r\n            Icon: PersonCircle,\r\n            content: 'Account Info',\r\n            onClick: alertUserInfo,\r\n          },\r\n          { Icon: BoxArrowRight, content: 'Logout', onClick: signOut },\r\n        ]}\r\n        responsive={true}\r\n      >\r\n        <Profile />\r\n      </DropdownWithLabel>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { v4 } from 'uuid';\r\nimport { Project } from '../types';\r\n\r\nconst initialState: {\r\n  selectedProject: string | null;\r\n  projectData: Project | null;\r\n} = {\r\n  selectedProject: null,\r\n  projectData: null,\r\n};\r\n\r\nconst appSlice = createSlice({\r\n  name: 'app',\r\n  initialState,\r\n  reducers: {\r\n    selectProject(state, action) {\r\n      state.selectedProject = action.payload;\r\n      state.projectData = null;\r\n    },\r\n    setProjectData(state, action) {\r\n      state.projectData = action.payload;\r\n    },\r\n    setSectionName(state, action) {\r\n      state.projectData!.sections[action.payload.id].name = action.payload.name;\r\n    },\r\n    addSection(state, action) {\r\n      state.projectData!.sections[action.payload.id] = action.payload;\r\n      state.projectData!.sectionsOrder.push(action.payload.id);\r\n    },\r\n    deleteSection(state, action) {\r\n      const sectionIndex = state.projectData!.sectionsOrder.findIndex(\r\n        section => section === action.payload,\r\n      )!;\r\n      state.projectData!.sectionsOrder.splice(sectionIndex, 1);\r\n      state.projectData!.sections[action.payload].cards.forEach(cardId => {\r\n        delete state.projectData!.cards[cardId];\r\n      });\r\n      delete state.projectData!.sections[action.payload];\r\n    },\r\n    dragSection(state, action) {\r\n      const [draggedEl] = state.projectData!.sectionsOrder.splice(\r\n        action.payload.sourceIndex,\r\n        1,\r\n      );\r\n      state.projectData!.sectionsOrder.splice(\r\n        action.payload.destinationIndex,\r\n        0,\r\n        draggedEl,\r\n      );\r\n    },\r\n    addCard(state, action) {\r\n      const id = action.payload.cardId;\r\n      state.projectData!.cards[id] = {\r\n        id,\r\n        title: '',\r\n        description: '',\r\n        checklist: [],\r\n      };\r\n      state.projectData!.sections[action.payload.sectionId].cards.push(id);\r\n\r\n      action.payload.changeURL();\r\n    },\r\n    dragCard(state, action) {\r\n      // splice the card from the source section\r\n      const { source, destination } = action.payload;\r\n\r\n      const [draggedEl] = state.projectData!.sections[\r\n        source.droppableId\r\n      ].cards.splice(source.index, 1);\r\n\r\n      // insert it into the destination\r\n      state.projectData!.sections[destination.droppableId].cards.splice(\r\n        destination.index,\r\n        0,\r\n        draggedEl,\r\n      );\r\n    },\r\n    deleteCard(state, action) {\r\n      const section = state.projectData!.sections[action.payload.sectionId];\r\n      section.cards.splice(section.cards.indexOf(action.payload.cardId), 1);\r\n      delete state.projectData!.cards[action.payload.cardId];\r\n    },\r\n    setCardTitle(state, action) {\r\n      state.projectData!.cards[action.payload.id].title = action.payload.value;\r\n    },\r\n    setCardDescription(state, action) {\r\n      state.projectData!.cards[action.payload.id].description =\r\n        action.payload.value;\r\n    },\r\n    toggleCheckbox(state, action) {\r\n      const checkbox = state.projectData!.cards[\r\n        action.payload.cardId\r\n      ].checklist.find(checkbox => checkbox.id === action.payload.checkboxId);\r\n      checkbox!.isChecked = !checkbox!.isChecked;\r\n    },\r\n    setCheckboxValue(state, action) {\r\n      const checkbox = state.projectData!.cards[\r\n        action.payload.cardId\r\n      ].checklist.find(checkbox => checkbox.id === action.payload.checkboxId);\r\n      checkbox!.content = action.payload.value;\r\n    },\r\n    deleteCheckbox(state, action) {\r\n      const checklist =\r\n        state.projectData!.cards[action.payload.cardId].checklist;\r\n      checklist.splice(\r\n        checklist.findIndex(\r\n          checkbox => checkbox.id === action.payload.checkboxId,\r\n        ),\r\n        1,\r\n      );\r\n    },\r\n    addCheckbox(state, action) {\r\n      const checklist = state.projectData!.cards[action.payload].checklist;\r\n\r\n      checklist.push({ id: v4(), isChecked: false, content: '' });\r\n    },\r\n  },\r\n});\r\n\r\nexport const appReducer = appSlice.reducer;\r\nexport const appActions = appSlice.actions;\r\n\r\n/* \r\n  {\r\n    cardId\r\n    checklistId\r\n  }\r\n*/\r\n","import React from 'react';\r\nimport { ListCheck, JustifyLeft, Trash } from 'react-bootstrap-icons';\r\nimport styled from 'styled-components';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { appActions } from '../../store/app-slice';\r\nimport {\r\n  DraggableProvidedDraggableProps,\r\n  DraggableProvidedDragHandleProps,\r\n} from 'react-beautiful-dnd';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.25rem;\r\n  background-color: var(--color-white);\r\n  margin: 0.25rem 0;\r\n  padding: 0.25rem;\r\n  border-bottom: var(--border-thick);\r\n  border-radius: 5px;\r\n\r\n  cursor: pointer;\r\n\r\n  & .title {\r\n  }\r\n\r\n  & .badges {\r\n    display: flex;\r\n    gap: 0.5rem;\r\n  }\r\n\r\n  & .checks {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.25rem;\r\n    border-radius: 5px;\r\n    padding: 0 0.25rem;\r\n\r\n    &.finished {\r\n      background-color: var(--color-primary-light);\r\n      color: var(--color-white);\r\n    }\r\n  }\r\n\r\n  & .btn {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`;\r\n\r\ninterface CardProps {\r\n  id: string;\r\n  sectionId: string;\r\n  title: string;\r\n  hasDescription: boolean;\r\n  checklistInfo: { total: number; checked: number };\r\n  draggableProps: DraggableProvidedDraggableProps;\r\n  dragHandleProps?: DraggableProvidedDragHandleProps;\r\n}\r\n\r\nconst Card = React.forwardRef<any, CardProps>(\r\n  (\r\n    {\r\n      id,\r\n      sectionId,\r\n      title,\r\n      hasDescription,\r\n      checklistInfo,\r\n      draggableProps,\r\n      dragHandleProps,\r\n    },\r\n    ref,\r\n  ) => {\r\n    const dispatch = useAppDispatch();\r\n    const history = useHistory();\r\n    const selectedProject = useAppSelector(state => state.app.selectedProject);\r\n\r\n    const deleteCard = () => {\r\n      dispatch(appActions.deleteCard({ sectionId, cardId: id }));\r\n    };\r\n\r\n    return (\r\n      <Container\r\n        ref={ref}\r\n        {...draggableProps}\r\n        {...dragHandleProps}\r\n        style={{\r\n          ...draggableProps.style,\r\n          cursor: 'pointer',\r\n        }}\r\n        onClick={e => history.push(`/project/${selectedProject}/card/${id}`)}\r\n      >\r\n        <div className=\"title\">{title || 'Untitled'}</div>\r\n        <div className=\"badges\">\r\n          {hasDescription && <JustifyLeft />}\r\n          {checklistInfo.total > 0 && (\r\n            <div\r\n              className={`checks ${\r\n                checklistInfo.total === checklistInfo.checked && 'finished'\r\n              } `}\r\n            >\r\n              <ListCheck />\r\n              <span>\r\n                {checklistInfo.checked}/{checklistInfo.total}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <IconButton\r\n          className=\"btn\"\r\n          onClick={e => {\r\n            e.stopPropagation();\r\n            deleteCard();\r\n          }}\r\n          size={hasDescription || checklistInfo.total > 0 ? 'medium' : 'small'}\r\n        >\r\n          <Trash size={20} />\r\n        </IconButton>\r\n      </Container>\r\n    );\r\n  },\r\n);\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Input = styled.input<{ variant: 'h1' | 'h2' | 'h3' | 'text' }>`\r\n  outline: none;\r\n\r\n  background-color: transparent;\r\n  color: inherit;\r\n  padding: 0.25rem;\r\n  border: 1px solid transparent;\r\n  border-radius: 5px;\r\n  transition: all 300ms;\r\n  font: ${props => `var(--font-${props.variant})`};\r\n\r\n  &:focus {\r\n    background-color: var(--color-grey);\r\n    border: var(--border-thick);\r\n  }\r\n`;\r\n\r\nexport default Input;\r\n","import { IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { PlusLg, Trash } from 'react-bootstrap-icons';\r\nimport styled from 'styled-components';\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport Card from '../Cards/Card';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { appActions } from '../../store/app-slice';\r\nimport Input from '../../UI/Input';\r\nimport { v4 } from 'uuid';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Container = styled.div`\r\n  flex: 0 0 max-content;\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: max-content;\r\n  background-color: var(--color-grey-light);\r\n  margin: 0 0.5rem;\r\n  border-radius: 5px;\r\n\r\n  & > .header {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 3.2rem;\r\n    padding: 0 0.5rem;\r\n    border-bottom: var(--border-thin);\r\n  }\r\n\r\n  & > .header > .title {\r\n    width: 10rem;\r\n  }\r\n\r\n  & .cards-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0.25rem 0.5rem;\r\n  }\r\n`;\r\n\r\ninterface SectionProps {\r\n  id: string;\r\n  name: string;\r\n  cards: {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    checklist: { id: string; isChecked: boolean; content: string }[];\r\n  }[];\r\n  draggableProps: object;\r\n  dragHandleProps?: object;\r\n}\r\n\r\nconst Section = React.forwardRef<any, SectionProps>(\r\n  ({ id, name, cards, draggableProps, dragHandleProps }, ref) => {\r\n    const dispatch = useAppDispatch();\r\n    const history = useHistory();\r\n    const selectedProject = useAppSelector(state => state.app.selectedProject);\r\n\r\n    return (\r\n      <Container {...draggableProps} ref={ref}>\r\n        <div className=\"header\" {...dragHandleProps}>\r\n          <Input\r\n            value={name}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              // dispatch the action\r\n              dispatch(appActions.setSectionName({ id, name: e.target.value }));\r\n            }}\r\n            variant=\"h3\"\r\n            className=\"title\"\r\n            placeholder=\"Untitled\"\r\n          />\r\n          <IconButton\r\n            style={{ marginLeft: 'auto', marginRight: '.25rem' }}\r\n            onClick={() => {\r\n              dispatch(appActions.deleteSection(id));\r\n            }}\r\n          >\r\n            <Trash size={20} />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={() => {\r\n              const cardId = v4();\r\n              dispatch(\r\n                appActions.addCard({\r\n                  sectionId: id,\r\n                  cardId,\r\n                  changeURL: () => {\r\n                    history.push(`/project/${selectedProject}/card/${cardId}`);\r\n                  },\r\n                }),\r\n              );\r\n            }}\r\n          >\r\n            <PlusLg size={18} />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Droppable droppableId={id} type=\"card\" direction=\"vertical\">\r\n          {provided => (\r\n            <div\r\n              className=\"cards-list\"\r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {cards.map((card, index) => {\r\n                return (\r\n                  <Draggable draggableId={card.id} index={index} key={card.id}>\r\n                    {provided => (\r\n                      <Card\r\n                        id={card.id}\r\n                        sectionId={id}\r\n                        title={card.title}\r\n                        hasDescription={card.description.trim().length > 0}\r\n                        checklistInfo={{\r\n                          total: card.checklist.length,\r\n                          checked: card.checklist.filter(\r\n                            check => check.isChecked,\r\n                          ).length,\r\n                        }}\r\n                        draggableProps={provided.draggableProps}\r\n                        dragHandleProps={provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                      />\r\n                    )}\r\n                  </Draggable>\r\n                );\r\n              })}\r\n              {provided.placeholder}\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </Container>\r\n    );\r\n  },\r\n);\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { PlusLg } from 'react-bootstrap-icons';\r\n\r\nconst Container = styled.div`\r\n  flex: 0 0 max-content;\r\n  background-color: var(--color-grey-light);\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 1rem;\r\n  margin: 0 0.5rem;\r\n  height: 3.2rem;\r\n  border: 2px dashed var(--color-black);\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: all 300ms;\r\n\r\n  &:hover {\r\n    background-color: var(--color-grey);\r\n  }\r\n\r\n  &:active {\r\n    background-color: var(--color-grey-dark);\r\n    color: var(--color-white);\r\n    border: 2px solid var(--color-grey-dark);\r\n  }\r\n\r\n  & svg {\r\n    margin-right: 1rem;\r\n  }\r\n\r\n  & h3 {\r\n    width: max-content;\r\n  }\r\n`;\r\n\r\nconst NewSection: React.FC<{ onClick: () => void }> = ({ onClick }) => {\r\n  return (\r\n    <Container onClick={onClick}>\r\n      <PlusLg size={18} />\r\n      <h3>Add a new Section</h3>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NewSection;\r\n","import React from 'react';\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\nimport Section from './Section';\r\nimport NewSection from './NewSection';\r\nimport { useAppDispatch } from '../../store/hooks';\r\nimport { v4 } from 'uuid';\r\nimport { appActions } from '../../store/app-slice';\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  padding: 1rem;\r\n  overflow-x: scroll;\r\n  scrollbar-width: thin;\r\n`;\r\n\r\ninterface SectionsListProps {\r\n  sectionsOrder?: string[];\r\n  sections?: {\r\n    [id: string]: {\r\n      id: string;\r\n      name: string;\r\n      cards: string[];\r\n    };\r\n  };\r\n  cards?: {\r\n    [id: string]: {\r\n      id: string;\r\n      title: string;\r\n      description: string;\r\n      checklist: { id: string; isChecked: boolean; content: string }[];\r\n    };\r\n  };\r\n}\r\n\r\nconst SectionsList: React.FC<SectionsListProps> = ({\r\n  sectionsOrder,\r\n  sections,\r\n  cards,\r\n}) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const addProject = () => {\r\n    const id = v4();\r\n    dispatch(\r\n      appActions.addSection({\r\n        id,\r\n        name: '',\r\n        cards: [],\r\n      }),\r\n    );\r\n  };\r\n\r\n  return sectionsOrder && sections && cards ? (\r\n    <DragDropContext\r\n      onDragEnd={result => {\r\n        const { source, destination } = result;\r\n        if (\r\n          !destination ||\r\n          (destination.index === source.index &&\r\n            destination.droppableId === source.droppableId)\r\n        )\r\n          return;\r\n\r\n        if (result.type === 'section') {\r\n          dispatch(\r\n            appActions.dragSection({\r\n              sourceIndex: source.index,\r\n              destinationIndex: destination.index,\r\n            }),\r\n          );\r\n        }\r\n        if (result.type === 'card') {\r\n          dispatch(appActions.dragCard({ source, destination }));\r\n        }\r\n      }}\r\n    >\r\n      <Droppable\r\n        droppableId=\"sections-list\"\r\n        type=\"section\"\r\n        direction=\"horizontal\"\r\n      >\r\n        {provided => (\r\n          <>\r\n            <Container ref={provided.innerRef} {...provided.droppableProps}>\r\n              {sectionsOrder.map((sectionId, index) => {\r\n                const section = sections[sectionId];\r\n                return (\r\n                  <Draggable\r\n                    key={section.id}\r\n                    draggableId={section.id}\r\n                    index={index}\r\n                  >\r\n                    {provided => (\r\n                      <Section\r\n                        ref={provided.innerRef}\r\n                        draggableProps={provided.draggableProps}\r\n                        dragHandleProps={provided.dragHandleProps}\r\n                        name={section.name}\r\n                        id={section.id}\r\n                        cards={section.cards.map(cardId => cards[cardId])}\r\n                      />\r\n                    )}\r\n                  </Draggable>\r\n                );\r\n              })}\r\n              {provided.placeholder}\r\n              <NewSection onClick={addProject} />\r\n            </Container>\r\n          </>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  ) : (\r\n    <div></div>\r\n  );\r\n};\r\n\r\nexport default SectionsList;\r\n","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../components/Header/Header';\r\nimport SectionsList from '../components/Sections/SectionsList';\r\nimport { db } from '../firebase';\r\nimport { useAppSelector } from '../store/hooks';\r\nimport Overlay from '../UI/Overlay';\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  width: calc(900px - 900px * 3 / 10);\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n\r\n  @media (max-width: 900px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst Main: React.FC<{\r\n  sidebarIsOpened: boolean;\r\n  openSidebar: () => void;\r\n  closeSidebar: () => void;\r\n}> = ({ sidebarIsOpened, openSidebar, closeSidebar }) => {\r\n  const projectData = useAppSelector(state => state.app.projectData);\r\n  const selectedProject = useAppSelector(state => state.app.selectedProject);\r\n\r\n  useEffect(() => {\r\n    if (projectData) {\r\n      db.collection('projects').doc(selectedProject!).set(projectData);\r\n    }\r\n  }, [projectData]);\r\n\r\n  return (\r\n    <Container>\r\n      <Overlay\r\n        showIn={sidebarIsOpened}\r\n        onClick={closeSidebar}\r\n        zIndex={500}\r\n        responsive={true}\r\n      />\r\n      <Header openSidebar={openSidebar} />\r\n      <SectionsList\r\n        sectionsOrder={projectData!.sectionsOrder}\r\n        sections={projectData!.sections}\r\n        cards={projectData!.cards}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport styled from 'styled-components';\r\nimport Sidebar from '../components/Sidebar/Sidebar';\r\nimport Main from './Main';\r\n\r\nconst Container = styled(Card)`\r\n  position: relative;\r\n  height: 900px;\r\n  display: block;\r\n\r\n  @media (max-width: 900px) {\r\n    display: block;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport default function Layout() {\r\n  const [sidebarIsOpened, setSidebarIsOpened] = useState(false);\r\n\r\n  const openSidebar = () => setSidebarIsOpened(true);\r\n  const closeSidebar = () => setSidebarIsOpened(false);\r\n\r\n  return (\r\n    <Container width={900}>\r\n      <Sidebar\r\n        isOpened={sidebarIsOpened}\r\n        close={closeSidebar}\r\n        open={openSidebar}\r\n      />\r\n      <Main\r\n        sidebarIsOpened={sidebarIsOpened}\r\n        openSidebar={openSidebar}\r\n        closeSidebar={closeSidebar}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 8rem auto 0 auto;\r\n  width: max-content;\r\n  max-width: 30rem;\r\n\r\n  .quote {\r\n    margin-bottom: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst LoadingPage: React.FC<{ noQuote?: boolean }> = ({ noQuote }) => {\r\n  const [quote, setQuote] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!noQuote) {\r\n      fetch('https://api.quotable.io/random')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setQuote(data.content);\r\n          setAuthor(data.author);\r\n        })\r\n        .catch(err => {\r\n          setQuote('The creative adult is the child who survived');\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"quote\">\r\n        {!noQuote && (\r\n          <h3 className=\"content\">\r\n            {quote || (\r\n              <Loader\r\n                type=\"ThreeDots\"\r\n                color=\"#4a4e4d\"\r\n                width={55}\r\n                height={50}\r\n                timeout={100}\r\n              />\r\n            )}\r\n          </h3>\r\n        )}\r\n        {!noQuote && (\r\n          <div className=\"author\">\r\n            {(author && `- ${author}`) || (\r\n              <Loader type=\"ThreeDots\" color=\"#4a4e4d\" width={35} height={35} />\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Loader type=\"TailSpin\" color=\"#2bae66\" width={50} height={50} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Modal from '../../UI/Modal';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport {\r\n  XLg,\r\n  X,\r\n  CardHeading,\r\n  JustifyLeft,\r\n  ListCheck,\r\n  PlusLg,\r\n} from 'react-bootstrap-icons';\r\nimport Input from '../../UI/Input';\r\nimport Button from '../../UI/Button';\r\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\r\nimport { appActions } from '../../store/app-slice';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport ReactMde from 'react-mde';\r\nimport MDEditor from '@uiw/react-md-editor';\r\nimport 'react-mde/lib/styles/css/react-mde-all.css';\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  padding: 0.5rem;\r\n`;\r\n\r\nconst Checklist = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.25rem;\r\n  margin: 1rem;\r\n\r\n  li {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0.1rem;\r\n    border: var(--border-thin);\r\n    border-radius: 5px;\r\n  }\r\n\r\n  li input {\r\n    flex: 1;\r\n  }\r\n`;\r\n\r\nconst NewCheckbox = styled(Button)`\r\n  width: calc(100% - 2rem);\r\n  margin: 1rem;\r\n`;\r\n\r\nconst MarkdownContainer = styled.div`\r\n  margin: 1rem;\r\n`;\r\n\r\nconst CardDetails: React.FC<{\r\n  showIn: boolean;\r\n  onClose: () => void;\r\n}> = ({ showIn, onClose }) => {\r\n  const { cardId } = useParams<{ cardId: string }>();\r\n  const [id, setId] = useState(cardId);\r\n\r\n  useEffect(() => {\r\n    if (!cardId)\r\n      setTimeout(() => {\r\n        setId(cardId);\r\n      }, 300);\r\n    if (cardId) setId(cardId);\r\n  }, [cardId]);\r\n\r\n  const dispatch = useAppDispatch();\r\n  const title = useAppSelector(\r\n    state => state.app.projectData!.cards[id]?.title,\r\n  );\r\n  const description = useAppSelector(\r\n    state => state.app.projectData!.cards[id]?.description,\r\n  );\r\n  const [selectedTab, setSelectedTab] = useState<'write' | 'preview'>('write');\r\n  const checklist = useAppSelector(\r\n    state => state.app.projectData!.cards[id]?.checklist,\r\n  );\r\n\r\n  return (\r\n    <Modal showIn={showIn} width={600} onClickAway={onClose}>\r\n      <IconButton\r\n        style={{ position: 'absolute', top: 0, right: 0 }}\r\n        onClick={onClose}\r\n      >\r\n        <X size={32} />\r\n      </IconButton>\r\n      <Header>\r\n        <CardHeading size={32} />\r\n        <Input\r\n          variant=\"h2\"\r\n          value={title || ''}\r\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n            if (e.target.value.length < 26)\r\n              dispatch(appActions.setCardTitle({ id, value: e.target.value }));\r\n          }}\r\n          placeholder=\"Untitled\"\r\n        />\r\n      </Header>\r\n      <Header>\r\n        <JustifyLeft size={32} />\r\n        <h2>Description</h2>\r\n      </Header>\r\n      <MarkdownContainer>\r\n        <ReactMde\r\n          value={description}\r\n          onChange={value =>\r\n            dispatch(appActions.setCardDescription({ id, value }))\r\n          }\r\n          selectedTab={selectedTab}\r\n          onTabChange={setSelectedTab}\r\n          generateMarkdownPreview={markdown =>\r\n            Promise.resolve(<MDEditor.Markdown source={markdown} />)\r\n          }\r\n        />\r\n      </MarkdownContainer>\r\n\r\n      <Header>\r\n        <ListCheck size={32} />\r\n        <h2>Checklist</h2>\r\n      </Header>\r\n      <Checklist>\r\n        {checklist?.map(({ id: checkboxId, isChecked, content }) => (\r\n          <li key={checkboxId}>\r\n            <Checkbox\r\n              color=\"default\"\r\n              checked={isChecked}\r\n              onClick={() =>\r\n                dispatch(appActions.toggleCheckbox({ checkboxId, cardId: id }))\r\n              }\r\n            />\r\n            <Input\r\n              variant=\"text\"\r\n              placeholder=\"Untitled\"\r\n              value={content}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                dispatch(\r\n                  appActions.setCheckboxValue({\r\n                    checkboxId,\r\n                    cardId: id,\r\n                    value: e.target.value as string,\r\n                  }),\r\n                )\r\n              }\r\n            />\r\n            <IconButton\r\n              onClick={() =>\r\n                dispatch(appActions.deleteCheckbox({ checkboxId, cardId: id }))\r\n              }\r\n            >\r\n              <XLg size={17} />\r\n            </IconButton>\r\n          </li>\r\n        ))}\r\n      </Checklist>\r\n      <NewCheckbox\r\n        variant=\"outlined\"\r\n        IconLabel={PlusLg}\r\n        fullWidth\r\n        className=\"btn\"\r\n        onClick={() => dispatch(appActions.addCheckbox(id))}\r\n      >\r\n        Add a new Todo\r\n      </NewCheckbox>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CardDetails;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Layout from '../containers/Layout';\r\nimport { db } from '../firebase';\r\nimport { appActions } from '../store/app-slice';\r\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\r\nimport { Project } from '../types';\r\nimport LoadingPage from './LoadingPage';\r\nimport { Route } from 'react-router-dom';\r\nimport CardDetails from '../components/Cards/CardDetails';\r\n\r\nexport default function Home() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { projectId } = useParams<{ projectId: string }>();\r\n  const userInfo = useAppSelector(state => state.auth.userInfo);\r\n  const dispatch = useAppDispatch();\r\n  const history = useHistory();\r\n  const selectedProject = useAppSelector(state => state.app.selectedProject);\r\n\r\n  const fetchProjectData = async (id: string): Promise<Project> => {\r\n    const doc = await db.collection('projects').doc(id).get();\r\n    return doc.data() as Project;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // run if the projectId changes\r\n    // check whether the project exists in the userInfo projects\r\n    setIsLoading(true);\r\n    if (userInfo!.projects.some(project => project.id === projectId)) {\r\n      dispatch(appActions.selectProject(projectId));\r\n      (async () => {\r\n        const projectData = await fetchProjectData(projectId);\r\n        dispatch(appActions.setProjectData(projectData));\r\n        setIsLoading(false);\r\n      })();\r\n    }\r\n  }, [projectId]);\r\n\r\n  return isLoading ? (\r\n    <LoadingPage noQuote={true} />\r\n  ) : (\r\n    <>\r\n      <Layout />\r\n      <Route path={`/project/${selectedProject}/card/:cardId`}>\r\n        {({ match }) => (\r\n          <CardDetails\r\n            showIn={match != null}\r\n            onClose={() => history.push(`/project/${selectedProject}`)}\r\n          />\r\n        )}\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Login from '../pages/Login';\nimport Home from '../pages/Home';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { auth, db } from '../firebase';\nimport { authActions } from '../store/auth-slice';\nimport LoadingPage from '../pages/LoadingPage';\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const userId = useAppSelector(state => state.auth.userId);\n  const userInfo = useAppSelector(state => state.auth.userInfo);\n  const dispatch = useAppDispatch();\n\n  const getUserData = async (uid: string) => {\n    const doc = await db.collection('users').doc(uid).get();\n\n    return doc.data();\n  };\n\n  useEffect(() => {\n    auth.onAuthStateChanged(user => {\n      setIsLoading(true);\n      if (!user) {\n        dispatch(authActions.signOut());\n        setIsLoading(false);\n        return;\n      }\n\n      (async () => {\n        const userInfo = await getUserData(user.uid);\n\n        dispatch(\n          authActions.login({\n            userId: user.uid,\n            userInfo,\n          }),\n        );\n\n        setIsLoading(false);\n      })();\n    });\n  }, []);\n\n  return isLoading ? (\n    <LoadingPage noQuote />\n  ) : (\n    <Switch>\n      {/* default routes */}\n\n      <Route path=\"/login\">\n        {!userId && !isLoading && <Login />}\n        {userId && <Redirect to={`/project/${userInfo!.projects[0].id}`} />}\n        {}\n      </Route>\n      <Route path=\"/project/:projectId\">\n        {userId && <Home />}\n        {!userId && !isLoading && <Redirect to=\"/login\" />}\n      </Route>\n\n      {/* unexpected routes */}\n\n      <Route path=\"*\">\n        {userId && <Redirect to={`/project/${userInfo!.projects[0].id}`} />}\n        {!userId && !isLoading && <Redirect to=\"/login\" />}\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { authReducer } from './auth-slice';\r\nimport { appReducer } from './app-slice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    app: appReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport './global-styles.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </Provider>\n  </Router>,\n  document.getElementById('app-root'),\n);\n"],"sourceRoot":""}